.include "ti83plus.inc"
.org userMem+9+2 ;userMem + REAL variable Y + our size bytes
prog_start:
	bcall(_clrLCDFull)
	bcall(_homeUp)
	ld hl,help
	bcall(_PutS)
	ld hl,credit
	bcall(_PutS)
key:
	bcall(_GetKey)
	cp kDel
	jp z,delall
	cp kQuit
	jp z,out
	cp kEnter
	jp z,doinst
	jr key
doinst:
	bcall(_clrLCDFull)
	bcall(_homeUp)
	ld hl,inst
	bcall(_PutS)
	bcall(_NewLine)

	in a, (6)
	push af
	in a, (2)
	and 80h
	ld b, 15h
	jr z, loc_9DAA
	in a, (21h)
	and 3
	ld b, 69h ; 'i'
	jr nz, loc_9DAA
	ld b, 29h ; ')'

loc_9DAA:		 ; CODE XREF: RAM:9D9E↑j
			; RAM:9DA6↑j ...
	ld a, b
	cp 8
	jp c, errorHandler
	out (6), a
	ld hl, 4000h
	ld a, (hl)
	cp 0FFh
	jr z, loc_9DD5
	cp 80h
	jp nz, errorHandler
	push bc
	push hl
	ld a, b
	ld hl, 4000h
	ld de, 8080h
	bcall(_FindAppHeaderSubField)
	inc hl
	inc hl
	ld d, (hl)
	pop hl
	pop bc
	jr nz, errorHandler
	ld a, b
	sub d
	ld b, a
	jr loc_9DAA

loc_9DD5:		 ; CODE XREF: RAM:9DB7↑j
	pop af
	push af
	out (6), a
	push bc
	ld hl, aApp
	rst rMOV9TOOP1
	bcall(_ChkFindSym)
	jr c, NotFound ; jump if it is not created
	ld a,b ; A set if archived
	or a ; is it archived?
	jr z,NotArchived ; jump if not
	jp Archived
NotArchived:
	inc de
	inc de
	ld (saveSScreen), de
	pop bc
	jr c, errorHandler
	ld a, b
	out (6), a
	ld hl, 4000h
	ld bc, 80h

loc_9DF3:		 ; CODE XREF: RAM:9E17↓j
	bit 7, h
	jr nz, errorHandler
	push hl
	push bc
	ld hl, (saveSScreen)
	ld de, 983Ah
	ldir
	pop bc
	pop hl
	push hl
	push bc
	push af
	ld (8434h), a
	call writeFlash
	ld hl, (saveSScreen)
	pop af
	pop bc
	add hl, bc
	ld (saveSScreen), hl
	pop hl
	add hl, bc
	jr loc_9DF3

NotFound:
	bcall(_clrLCDFull)
	bcall(_homeUp)
	ld hl,notfnd
	bcall(_PutS)
	ld hl,appuyez
	bcall(_PutS)
	bcall(_GetKey)
	jr errorHandler
Archived:
	bcall(_clrLCDFull)
	bcall(_homeUp)
	ld hl,arch
	bcall(_PutS)
	ld hl,appuyez
	bcall(_PutS)
	bcall(_GetKey)
errorHandler:
	pop af
	out (6), a
	bcall(_resetRam)
	ret

writeFlash:
;Writes C bytes to AHL
;Input: AHL is page:address
; pagedBuf contains data to write
	ld (arcInfo),a
	ld (iMathPtr5),hl
	ld a,c
	ld (pagedCount),a
	in a,(6)
	push af
	ld a,7Bh
	call translatePage
	out (6),a
	ld hl,5092h
	ld e,(hl)
	inc hl
	ld d,(hl)
	inc hl
	ld a,(hl)
	call translatePage
	out (6),a
	ex de,hl
	ld a,0CCh
	ld bc,0FFFFh
	cpir
	ld e,(hl)
	inc hl
	ld d,(hl)
	ex de,hl
	ld de,returnPoint
	push de
	jp (hl)
returnPoint:
	pop af
	out (6),a
	ret
translatePage:
	push af
	in a,(2)
	and 80h
	jr z,_old
	pop bc
	in a,(21h)
	and 3
	ld a,b
	ret nz
	and 3Fh
	ret
_old: 
	pop af
	and 1Fh
	ret
delall:
	bcall(_clrLCDFull)
	bcall(_homeUp)
	ld hl,deleting
	bcall(_PutS)
	bcall(_ZeroOP1) ; initialize OP1 for 1st search
loop:
	ld a,'.'
	bcall(_PutC)
	bcall (_FindAppUp) ; look for next higher
	jr c, out ; not found
	bcall (_FindApp)
	bcall (_DeleteApp)
	jr loop
out:
	bcall(_resetRam)
	ret
aApp:	 
	.db 15h
	.db "APP",0

;	     1234567890123456

inst:
	.db "Installation en "
	.db "cours...",0
deleting:
	.db "Suppression en  "
	.db "cours..",0
notfnd:
	.db "La variable APP "
	.db "n'existe pas!   ",0
arch:
	.db "La variable APP "
	.db "ne doit pas ",LeCaret,"tre"
	.db "archiv",LeAcute,"e!       ",0

appuyez:
	.db "Appuyez sur une "
	.db "touche pour     "
	.db "red"
	.db LeAcute
	.db "marrer.     ",0
help:
	.db "ENTRER=installer"
	.db "app depuis 8xv. "
	.db "SUPPR=supprimer "
	.db "toutes les apps."
	.db "QUITTER=        "
	.db "red"
	.db LeAcute
	.db "marrer.     ",0
credit:
	.db "Pour parrotgeek1",0
prog_end:
.fill 1000-(prog_end-prog_start), $FF ;this program must be 1000 bytes to match the dummy variable in 82A_base.82B
.end
end
