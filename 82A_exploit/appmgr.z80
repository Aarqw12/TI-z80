#include    "ti83plus.inc"
.org        $4000

   .db 080h,00Fh										;Field: Program length 
   .db 00h,00h,00h,00h									;Length=0 
   .db 080h,012h										;Field: Program type 
   .db 01h,04h										;Type= Shareware, TI-83Plus 
   .db 080h,021h										;Field: App ID 
   .db 01h											;Id = 1 
   .db 080h,031h										;Field: App Build 
   .db 01h											;Build = 1 
   .db 080h,048h										;Field: App Name 
   .db "AppMgr", 000h, 000h						;Name
   .db 080h, 081h										;Field: Number of pages
   .db 001h											;Pages: 1
   .db 080h, 090h										;Field: Security data
   .db 003h, 026h, 009h, 004h								;Start of security data used with signing
   .db 013h, 069h, 0DBh, 04Bh
   .db 002h, 00Dh, 040h, 0A1h, 06Bh, 099h, 0F6h, 059h, 0BCh, 067h
   .db 0F5h, 085h, 09Ch, 009h, 06Ch, 00Fh, 0B4h, 003h, 09Bh, 0C9h
   .db 003h, 032h, 02Ch, 0E0h, 003h, 020h, 0E3h, 02Ch, 0F4h, 02Dh
   .db 073h, 0B4h, 027h, 0C4h, 0A0h, 072h, 054h, 0B9h, 0EAh, 07Ch
   .db 03Bh, 0AAh, 016h, 0F6h, 077h, 083h, 07Ah, 0EEh, 01Ah, 0D4h
   .db 042h, 04Ch, 06Bh, 08Bh, 013h, 01Fh, 0BBh, 093h, 08Bh, 0FCh
   .db 019h, 01Ch, 03Ch, 0ECh, 04Dh, 0E5h, 075h					;End of security data used with signing
   .db 80h,7Fh										;Field: Program Image length 
   .db 0,0,0,0											;Length=0, N/A 
   .db 000h, 000h, 000h, 000h								;padding
   .db 000h, 000h, 000h, 000h								;padding
   .db 000h, 000h, 000h, 000h								;padding
   .db 000h, 000h, 000h, 000h								;padding

prog_start1:
	bcall(_RunIndicOff)
prog_start:
;Select Flash application to delete
	bcall(_ClrLCDFull)
	bcall(_HomeUp)
	set textInverse,(iy+textFlags)
	ld hl,sSelectApp
	call PutSApp
	res textInverse,(iy+textFlags)
	ld hl,sHelp
	call PutSApp
	ld hl,sHelpI
	call PutSApp
	call INewLine
	bcall(_ZeroOP1)
	bcall(_FindAppUp)
	jp c,None
DisplayApp:
	ld hl,0104h
	ld (curRow),hl
	ld a,Lleft
	call IPutC
	ld hl,0404h
	ld (curRow),hl
	ld hl,OP1+1
	call PutSApp
	bcall(_EraseEOL)
	ld hl,0D04h
	ld (curRow),hl
	ld a,Lconvert
	call IPutC
	ld hl,0205h
	ld (curRow),hl
	bcall(_FindApp)
	bcall(_FindAppNumPages)
	ld h,16
	ld l,c
	push af
	push bc
	push de
	bcall(_HTimesL)
	push hl
	bcall(_OP1ToOP2)
	pop hl
	bcall(_DispHL)
	bcall(_OP2ToOP1)
	pop de
	pop bc
	pop af
	ld hl,sKB
	call PutSApp
selectAppKeyLoop:
	call IGetKey
	cp kDel
	jr z,DeleteIt
	cp kQuit
	jr z,quit
	cp kAdd
	jp z,doinst
	cp kLeft
	jr z,doAppLeft
	cp kRight
	jr z,doAppRight
	jr selectAppKeyLoop
doAppLeft:
	bcall(_FindAppDn)
	jr DisplayApp
doAppRight:
	bcall(_FindAppUp)
	jr DisplayApp
DeleteIt:
	bcall(_FindApp)
	jr c,quit
	bcall(_ClrLCDFull)
	bcall(_HomeUp)
	bcall(_RunIndicOn)
	bcall(_DeleteApp)
	set   3,(iy + $25) ; this bit is set when an app is deleted
	ld   a,cxErase
	bcall(_NewContext0)
	bcall(_RunIndicOff)
	set textInverse,(iy+textFlags)
	ld hl,sSelectApp
	call PutSApp
	res textInverse,(iy+textFlags)
	call INewLine
	ld hl,sDeleted
	call PutSApp
	call IGetKey
	jp prog_start
None:
	call INewLine
	ld hl,sNone
	call PutSApp
KLoop:
	call IGetKey
	cp kQuit
	jr z,quit
	cp kAdd
	jp z,doinst
	jr KLoop
quit:
	bcall(_ClrLCDFull)
	bcall(_HomeUp)
	bjump(_JForceCmdNoChar)

doinst:
	bcall(_clrLCDFull)
	bcall(_homeUp)
	ld hl,inst
	call PutSApp
	bcall(_NewLine)
	ld de, appBackUpScreen
	ld hl, instThing
	ld bc, instThingEnd-instThing
	ldir
	jp appBackUpScreen

PutSApp:
IPutS:
	ld     a,(hl)
	inc    hl
	or     a
	ret    z
	call   IPutC
	jr     IPutS

IPutC:
	push   hl ;don't think these are necessary
	push   bc
	bcall(_PutC)
	pop    bc
	pop    hl
	ret
	
IGetKey:
	push ix
	push bc
	push de
	push hl
	res onInterrupt,(iy+onFlags)
	bcall (_GetKey)
	pop hl
	pop de
	pop bc
	pop ix
	ret

INewLine:
	push af
	push de
	push bc
	push hl
	push ix
	bcall(_NewLine)
	pop ix
	pop hl
	pop bc
	pop de
	pop af
	ret

sDeleted:
	.db " App supprim",LeAcute,"e! "
	.db "Appuyez sur une "
	.db "    touche      ",0
sNone:
	.db "   Aucune app   "
	.db "    trouv",LeAcute,"e     ",0
sSelectApp:
	.db "APP MANAGER v0.2",0
sKB:
	.db " Ko",0
sHelp:
	.db "SUPPR=Supprimer ",0
sHelpI:
	.db "+=Installer App ",0
inst:
	.db "Installation en "
	.db "    cours...",0

; ----------------------------------

;.org appBackUpScreen
instThing:
	in a, (6)
	push af
	in a, (2)
	and 80h
	ld b, 15h
	jr z, loc_9DAA
	in a, (21h)
	and 3
	ld b, 69h ; 'i'
	jr nz, loc_9DAA
	ld b, 29h ; ')'

loc_9DAA:		 ; CODE XREF: RAM:9D9E↑j
			; RAM:9DA6↑j ...
	ld a, b
	cp 8
	jr c, errorHandler
	out (6), a
	ld hl, 4000h
	ld a, (hl)
	cp 0FFh
	jr z, loc_9DD5
	cp 80h
	jr nz, errorHandler
	push bc
	push hl
	ld a, b
	ld hl, 4000h
	ld de, 8080h
	bcall(_FindAppHeaderSubField)
	inc hl
	inc hl
	ld d, (hl)
	pop hl
	pop bc
	jr nz, errorHandler
	ld a, b
	sub d
	ld b, a
	jr loc_9DAA

loc_9DD5:		 ; CODE XREF: RAM:9DB7↑j
	pop af
	push af
	out (6), a
	push bc
	ld hl, aApp-instThing+appBackUpScreen
	rst rMOV9TOOP1
	bcall(_ChkFindSym)
	inc de
	inc de
	ld (saveSScreen), de
	pop bc
	jr c, errorHandler
	ld a, b
	out (6), a
	ld hl, 4000h
	ld bc, 80h

loc_9DF3:		 ; CODE XREF: RAM:9E17↓j
	bit 7, h
	jr nz, errorHandler
	push hl
	push bc
	ld hl, (saveSScreen)
	ld de, 983Ah
	ldir
	pop bc
	pop hl
	push hl
	push bc
	push af
	ld (8434h), a
	call writeFlash
	ld hl, (saveSScreen)
	pop af
	pop bc
	add hl, bc
	ld (saveSScreen), hl
	pop hl
	add hl, bc
	jr loc_9DF3
ok:
	ld hl, instdone-instThing+appBackUpScreen
	jr commonout
errorHandler:
	ld hl, insterr-instThing+appBackUpScreen
commonout:
	bcall(_PutS)
	bcall(_GetKey)
	bcall(_ClrLCDFull)
	bcall(_HomeUp)
	pop af
	out (6), a
	bjump(_JForceCmdNoChar)

writeFlash:
;Writes C bytes to AHL
;Input: AHL is page:address
; pagedBuf contains data to write
	ld (arcInfo),a
	ld (iMathPtr5),hl
	ld a,c
	ld (pagedCount),a
	in a,(6)
	push af
	ld a,7Bh
	call translatePage-instThing+appBackUpScreen
	out (6),a
	ld hl,5092h
	ld e,(hl)
	inc hl
	ld d,(hl)
	inc hl
	ld a,(hl)
	call translatePage-instThing+appBackUpScreen
	out (6),a
	ex de,hl
	ld a,0CCh
	ld bc,0FFFFh
	cpir
	ld e,(hl)
	inc hl
	ld d,(hl)
	ex de,hl
	ld de,returnPoint-instThing+appBackUpScreen
	push de
	jp (hl)
returnPoint:
	pop af
	out (6),a
	ret
translatePage:
	push af
	in a,(2)
	and 80h
	jr z,_old
	pop bc
	in a,(21h)
	and 3
	ld a,b
	ret nz
	and 3Fh
	ret
_old: 
	pop af
	and 1Fh
	ret

aApp:	 
	.db 15h
	.db "APP",0

instdone:
	.db "  Installation  "
	.db "   r",LeAcute,"ussie!"
	.db "Appuyez sur une "
	.db "    touche      ",0
insterr:
	.db "L'installation a"
	.db "   ",LeAcute,"chou",LeAcute,"!"
	.db "Appuyez sur une "
	.db "    touche      ",0

instThingEnd:

.end
end
