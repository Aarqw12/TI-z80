#include    "ti83plus.inc"
.org        $4000

   .db 080h,00Fh										;Field: Program length 
   .db 00h,00h,00h,00h									;Length=0 
   .db 080h,012h										;Field: Program type 
   .db 01h,04h										;Type= Shareware, TI-83Plus 
   .db 080h,021h										;Field: App ID 
   .db 01h											;Id = 1 
   .db 080h,031h										;Field: App Build 
   .db 01h											;Build = 1 
   .db 080h,048h										;Field: App Name 
   .db "UnlkFlas"						;Name
   .db 080h, 081h										;Field: Number of pages
   .db 001h											;Pages: 1
   .db 080h, 090h										;Field: Security data
   .db 003h, 026h, 009h, 004h								;Start of security data used with signing
   .db 013h, 069h, 0DBh, 04Bh
   .db 002h, 00Dh, 040h, 0A1h, 06Bh, 099h, 0F6h, 059h, 0BCh, 067h
   .db 0F5h, 085h, 09Ch, 009h, 06Ch, 00Fh, 0B4h, 003h, 09Bh, 0C9h
   .db 003h, 032h, 02Ch, 0E0h, 003h, 020h, 0E3h, 02Ch, 0F4h, 02Dh
   .db 073h, 0B4h, 027h, 0C4h, 0A0h, 072h, 054h, 0B9h, 0EAh, 07Ch
   .db 03Bh, 0AAh, 016h, 0F6h, 077h, 083h, 07Ah, 0EEh, 01Ah, 0D4h
   .db 042h, 04Ch, 06Bh, 08Bh, 013h, 01Fh, 0BBh, 093h, 08Bh, 0FCh
   .db 019h, 01Ch, 03Ch, 0ECh, 04Dh, 0E5h, 075h					;End of security data used with signing
   .db 80h,7Fh										;Field: Program Image length 
   .db 0,0,0,0											;Length=0, N/A 
   .db 000h, 000h, 000h, 000h								;padding
   .db 000h, 000h, 000h, 000h								;padding
   .db 000h, 000h, 000h, 000h								;padding
   .db 000h, 000h, 000h, 000h								;padding

prog_start1:
	bcall(_ClrLCDFull)
	bcall(_HomeUp)
	ld hl,sUnlk
	call PutSApp
	call UnlockFlash
	bcall(_ClrLCDFull)
	bcall(_HomeUp)
	bjump(_JForceCmdNoChar)

PutSApp:
IPutS:
	ld     a,(hl)
	inc    hl
	or     a
	ret    z
	call   IPutC
	jr     IPutS

IPutC:
	push   hl ;don't think these are necessary
	push   bc
	bcall(_PutC)
	pop    bc
	pop    hl
	ret

;thepenguin77 universl.z80
;%% APPLICATION VERSION %% 

UnlockFlash:
;Unlocks Flash protection.
;Destroys: pagedCount                        
;          pagedGetPtr
;          arcInfo
;          iMathPtr5
;          pagedBuf
;          ramCode

        di
        in      a, (06)
        push    af

        ld      hl, returnPoint+$8214-$81E3
        ld      de, $8214
        ld      a, e
        ld      (arcInfo), a            ;should be 08-15
        ld      (pagedCount), a         ;just has to be over 2
        ld      bc, $8214-$8167
        lddr
        ld      (iMathPtr5), de         ;must be 8167
        ld      iy, 0056h-25h           ;permanent flags
        
        jp      $81E3+continuePoint-returnPoint

continuePoint:
        add     a, e
        ld      (pagedBuf), a           ;needs to be large, but under 80
        call    $81E3+translatePage-returnPoint
        ld      hl, ($5092)
        ld      a, ($5094)
        call    $81E3+translatePage-returnPoint
        ld      a, $CC
        cpir
        dec     hl
        jp      (hl)

returnPoint:
        ld      hl, $0018
        ld      (hl), $C3               ;dummy write
flashWait:
        ld      iy, flags
        djnz    flashWait               ;wait for write to finish
        add     hl, sp
        ld      sp, hl
        pop     af
translatePage:
        bcall(_NZIf83Plus)
        jr      z, not83
        and     1Fh
not83:
        out     (06), a
        ret

sUnlk:
	.db "Unlocking flash",0

; ----------------------------------

.end
end
